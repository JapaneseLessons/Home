<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Japanese Vocabulary Flashcards</title>
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Noto+Sans+JP:wght@400;700&family=Noto+Serif+JP:wght@400;700&display=swap');
        
        /* Define color variables */
        :root {
            /* Homepage colors */
            --home-primary: #3e7f80;
            --home-secondary: #5ba3a3;
            --home-bg: #e6f4f1;
            
            /* Beginner colors */
            --beginner-primary: #b07d28;
            --beginner-secondary: #d9a440;
            --beginner-bg: #faf6e9;
            --beginner-accent: #ecd5a9;
        }
        
        * {
            box-sizing: border-box;
            margin: 0;
            padding: 0;
        }
        
        body {
            font-family: 'Noto Sans JP', sans-serif;
            background-color: var(--beginner-bg);
            background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="300" height="300" viewBox="0 0 100 100"><path fill="%23d9cfc1" fill-opacity="0.2" d="M11 18c3.866 0 7-3.134 7-7s-3.134-7-7-7-7 3.134-7 7 3.134 7 7 7zm48 25c3.866 0 7-3.134 7-7s-3.134-7-7-7-7 3.134-7 7 3.134 7 7 7zm-43-7c1.657 0 3-1.343 3-3s-1.343-3-3-3-3 1.343-3 3 1.343 3 3 3zm63 31c1.657 0 3-1.343 3-3s-1.343-3-3-3-3 1.343-3 3 1.343 3 3 3zM34 90c1.657 0 3-1.343 3-3s-1.343-3-3-3-3 1.343-3 3 1.343 3 3 3zm56-76c1.657 0 3-1.343 3-3s-1.343-3-3-3-3 1.343-3 3 1.343 3 3 3zM12 86c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm28-65c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm23-11c2.76 0 5-2.24 5-5s-2.24-5-5-5-5 2.24-5 5 2.24 5 5 5zm-6 60c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm29 22c2.76 0 5-2.24 5-5s-2.24-5-5-5-5 2.24-5 5 2.24 5 5 5zM32 63c2.76 0 5-2.24 5-5s-2.24-5-5-5-5 2.24-5 5 2.24 5 5 5zm57-13c2.76 0 5-2.24 5-5s-2.24-5-5-5-5 2.24-5 5 2.24 5 5 5zm-9-21c1.105 0 2-.895 2-2s-.895-2-2-2-2 .895-2 2 .895 2 2 2zM60 91c1.105 0 2-.895 2-2s-.895-2-2-2-2 .895-2 2 .895 2 2 2zM35 41c1.105 0 2-.895 2-2s-.895-2-2-2-2 .895-2 2 .895 2 2 2zM12 60c1.105 0 2-.895 2-2s-.895-2-2-2-2 .895-2 2 .895 2 2 2z"></path></svg>');
            padding: 20px;
            min-height: 100vh;
            display: flex;
            flex-direction: column;
            align-items: center;
        }
        
        .container {
            max-width: 800px;
            width: 100%;
            margin: 0 auto;
            background-color: rgba(255, 253, 247, 0.9);
            border-radius: 12px;
            padding: 20px;
            box-shadow: 0 8px 24px rgba(176, 125, 40, 0.15);
            border: 1px solid var(--beginner-accent);
        }
        
        /* Breadcrumb styles */
        .breadcrumb {
            display: flex;
            list-style: none;
            padding: 10px 15px;
            margin-bottom: 20px;
            background-color: #f0ebd9;
            border-radius: 8px;
            width: 100%;
        }
        
        .breadcrumb li {
            display: inline;
            font-size: 0.9rem;
            color: #5b7b8b;
        }
        
        .breadcrumb li+li:before {
            padding: 8px;
            color: var(--beginner-secondary);
            content: ">";
        }
        
        .breadcrumb li a {
            color: var(--beginner-primary);
            text-decoration: none;
        }
        
        .breadcrumb li a:hover {
            text-decoration: underline;
        }
        
        h1 {
            font-family: 'Noto Serif JP', serif;
            color: var(--beginner-primary);
            margin-bottom: 15px;
            font-size: 2rem;
            text-align: center;
            position: relative;
        }
        
        h1::after {
            content: '';
            position: absolute;
            bottom: -8px;
            left: 50%;
            transform: translateX(-50%);
            width: 100px;
            height: 2px;
            background: linear-gradient(90deg, transparent, var(--beginner-secondary), transparent);
        }
        
        .controls {
            display: flex;
            flex-wrap: wrap;
            justify-content: center;
            gap: 12px;
            margin-bottom: 20px;
            width: 100%;
        }
        
        .checkbox-control {
            display: flex;
            align-items: center;
        }
        
        .checkbox-control input {
            margin-right: 5px;
        }
        
        .checkbox-control label {
            font-size: 14px;
        }
        
        .categories {
            display: flex;
            flex-wrap: wrap;
            justify-content: center;
            gap: 8px;
            margin: 20px 0;
            width: 100%;
        }
        
        .category-btn {
            padding: 8px 16px;
            font-size: 14px;
            border-radius: 30px;
            border: 1px solid var(--beginner-accent);
            cursor: pointer;
            background-color: #f0ebd9;
            color: var(--beginner-primary);
            transition: all 0.3s;
            font-family: 'Noto Sans JP', sans-serif;
            outline: none;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
        
        .category-btn:hover {
            background-color: #e5dac9;
        }
        
        .category-btn.active {
            background-color: var(--beginner-secondary);
            color: #fff;
            border-color: var(--beginner-primary);
        }
        
        .card-counter {
            font-size: 14px;
            color: #666;
            margin-bottom: 10px;
            text-align: center;
        }
        
        .flashcard-container {
            width: 100%;
            height: 300px;
            perspective: 1000px;
            margin-bottom: 20px;
            cursor: pointer;
        }
        
        .flashcard {
            position: relative;
            width: 100%;
            height: 100%;
            transform-style: preserve-3d;
            transition: transform 0.5s;
        }
        
        .flashcard.flipped {
            transform: rotateY(180deg);
        }
        
        .card-face {
            position: absolute;
            width: 100%;
            height: 100%;
            backface-visibility: hidden;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            padding: 20px;
            border-radius: 8px;
            border: 3px solid var(--beginner-secondary);
        }
        
        .card-front {
            background-color: #f5efe2;
            background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="100" height="100" viewBox="0 0 100 100"><path d="M20,40 Q30,35 40,40 T60,40 T80,40" stroke="%23d9bb8d" fill="none" stroke-width="1" opacity="0.6"/><path d="M25,70 Q35,75 45,70 T65,70" stroke="%23d9bb8d" fill="none" stroke-width="1" opacity="0.6"/><path d="M10,10 L15,30 M85,10 L80,30" stroke="%23d9bb8d" stroke-width="1" opacity="0.4"/><circle cx="20" cy="20" r="5" fill="%23d9bb8d" opacity="0.2"/><circle cx="80" cy="20" r="5" fill="%23d9bb8d" opacity="0.2"/><circle cx="50" cy="90" r="3" fill="%23d9bb8d" opacity="0.2"/></svg>');
            background-size: 100px 100px;
            background-repeat: no-repeat;
            background-position: center bottom;
        }
        
        .card-back {
            background-color: #f3ede1;
            transform: rotateY(180deg);
            background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="100" height="100" viewBox="0 0 100 100"><path d="M40,20 Q50,15 60,20" stroke="%23d9a440" fill="none" stroke-width="1" opacity="0.4"/><path d="M30,80 Q50,85 70,80" stroke="%23d9a440" fill="none" stroke-width="1" opacity="0.4"/><path d="M20,30 Q25,50 20,70 M80,30 Q75,50 80,70" stroke="%23d9a440" stroke-width="1" opacity="0.3"/></svg>');
            background-size: 100px 100px;
            background-repeat: no-repeat;
            background-position: center;
        }
        
        .japanese {
            font-family: 'Noto Serif JP', serif;
            font-size: 2.5rem;
            color: var(--beginner-primary);
            margin-bottom: 10px;
            text-align: center;
        }
        
        .romaji {
            font-size: 1.3rem;
            color: var(--beginner-secondary);
            margin-bottom: 8px;
            text-align: center;
        }
        
        .pronunciation {
            font-size: 1rem;
            font-style: italic;
            color: #777;
            margin-bottom: 15px;
            text-align: center;
        }
        
        .category-label {
            font-size: 0.8rem;
            background-color: var(--beginner-accent);
            color: var(--beginner-primary);
            padding: 3px 8px;
            border-radius: 12px;
            margin-top: 10px;
        }
        
        .memory-aid {
            text-align: center;
            font-size: 14px;
            color: var(--beginner-secondary);
            margin-top: 16px;
            margin-bottom: 12px;
            max-width: 300px;
        }
        
        .memory-aid-title {
            font-weight: bold;
            margin-bottom: 4px;
        }
        
        .english {
            font-size: 1.8rem;
            font-weight: bold;
            color: var(--beginner-primary);
            margin-bottom: 16px;
            text-align: center;
        }
        
        .example {
            font-size: 1.2rem;
            color: var(--beginner-secondary);
            margin-bottom: 4px;
            text-align: center;
        }
        
        .example-romaji {
            font-size: 1rem;
            color: var(--beginner-secondary);
            margin-bottom: 4px;
            text-align: center;
        }
        
        .example-english {
            font-size: 1rem;
            color: #555;
            margin-bottom: 15px;
            text-align: center;
        }
        
        .flip-instruction {
            font-size: 12px;
            color: #999;
            margin-top: 15px;
        }
        
        .nav-buttons {
            display: flex;
            justify-content: center;
            gap: 20px;
            width: 100%;
            margin-bottom: 20px;
        }
        
        .nav-btn {
            padding: 10px 20px;
            background-color: var(--beginner-secondary);
            color: white;
            border: none;
            border-radius: 30px;
            cursor: pointer;
            transition: background-color 0.3s;
            font-family: 'Noto Sans JP', sans-serif;
            box-shadow: 0 2px 4px rgba(0,0,0,0.2);
        }
        
        .nav-btn:hover {
            background-color: var(--beginner-primary);
        }
        
        .instructions {
            background-color: #f0ebd9;
            border-radius: 8px;
            padding: 15px;
            width: 100%;
            margin-top: 20px;
            border: 1px solid var(--beginner-accent);
        }
        
        .instructions h2 {
            font-family: 'Noto Serif JP', serif;
            color: var(--beginner-primary);
            margin-bottom: 10px;
            font-size: 1.2rem;
        }
        
        .instructions ul {
            padding-left: 25px;
            color: #5a4224;
        }
        
        .instructions li {
            margin-bottom: 5px;
        }
        
        @media (max-width: 600px) {
            .japanese {
                font-size: 2rem;
            }
            
            .romaji {
                font-size: 1.1rem;
            }
            
            .english {
                font-size: 1.5rem;
            }
            
            .flashcard-container {
                height: 250px;
            }
            
            .categories {
                gap: 6px;
            }
            
            .category-btn {
                padding: 6px 12px;
                font-size: 12px;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <!-- Breadcrumb navigation -->
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li><a href="index.html">Home</a></li>
                <li><a href="index.html#beginner">Beginner</a></li>
                <li>Vocabulary Flashcards</li>
            </ol>
        </nav>
        
        <h1>日本語 単語カード</h1>
        <p style="text-align: center; margin-bottom: 20px; color: #5b7b8b;">Japanese Vocabulary Flashcards</p>
        
        <div class="controls">
            <div class="checkbox-control">
                <input type="checkbox" id="showRomaji" checked>
                <label for="showRomaji">Show Romaji</label>
            </div>
            
            <div class="checkbox-control">
                <input type="checkbox" id="showPronunciation" checked>
                <label for="showPronunciation">Show Pronunciation</label>
            </div>
            
            <div class="checkbox-control">
                <input type="checkbox" id="shuffleCards">
                <label for="shuffleCards">Shuffle Cards</label>
            </div>
        </div>
        
        <div class="categories" id="categories">
            <!-- Categories will be populated by JavaScript -->
        </div>
        
        <div class="card-counter" id="cardCounter">
            Card 1 of 50
        </div>
        
        <div class="flashcard-container" id="flashcardContainer">
            <div class="flashcard" id="flashcard">
                <div class="card-face card-front" id="cardFront">
                    <div class="japanese" id="japanese">りんご</div>
                    <div class="romaji" id="romaji">ringo</div>
                    <div class="pronunciation" id="pronunciation">"reen-go"</div>
                    <div class="category-label" id="categoryLabel">Fruits</div>
                    <div class="memory-aid">
                        <div class="memory-aid-title">Memory Aid:</div>
                        <div id="memoryAid">The "ring" goes around the apple</div>
                    </div>
                    <div class="flip-instruction">Click to flip</div>
                </div>
                
                <div class="card-face card-back">
                    <div class="english" id="english">apple</div>
                    <div class="example" id="example">これはりんごです。</div>
                    <div class="example-romaji" id="exampleRomaji">Kore wa ringo desu.</div>
                    <div class="example-english" id="exampleEnglish">This is an apple.</div>
                    <div class="flip-instruction">Click to flip</div>
                </div>
            </div>
        </div>
        
        <div class="nav-buttons">
            <button class="nav-btn" id="prevBtn">Previous</button>
            <button class="nav-btn" id="nextBtn">Next</button>
        </div>
        
        <div class="instructions">
            <h2>How to Use:</h2>
            <ul>
                <li>Click on the card to flip between Japanese and English</li>
                <li>Use the Previous/Next buttons to navigate through cards</li>
                <li>Toggle options to show/hide romaji and pronunciation</li>
                <li>Select a category to focus on specific types of vocabulary</li>
                <li>Enable shuffle for randomized practice</li>
                <li>Memory aids help you remember connections between words</li>
            </ul>
        </div>
    </div>
    
    <script>
        const allCards = [
            // Numbers 1-20, 100, 1000, 10000, 1,000,000
            {
                japanese: 'いち',
                romaji: 'ichi',
                english: 'one',
                pronunciation: 'ee-chee',
                example: 'りんごが一つあります。',
                exampleRomaji: 'Ringo ga hitotsu arimasu.',
                exampleEnglish: 'There is one apple.',
                category: 'numbers',
                memoryAid: 'Ee-chee - "Itchy" - you have one itchy spot'
            },
            {
                japanese: 'に',
                romaji: 'ni',
                english: 'two',
                pronunciation: 'nee',
                example: '二人の友達がいます。',
                exampleRomaji: 'Futari no tomodachi ga imasu.',
                exampleEnglish: 'I have two friends.',
                category: 'numbers',
                memoryAid: 'Ni - "Knee" - you have two knees'
            },
            {
                japanese: 'さん',
                romaji: 'san',
                english: 'three',
                pronunciation: 'sahn',
                example: '三冊の本を買いました。',
                exampleRomaji: 'Sansatsu no hon o kaimashita.',
                exampleEnglish: 'I bought three books.',
                category: 'numbers',
                memoryAid: 'San - sounds like "sun" - three rays of sunshine'
            },
            {
                japanese: 'よん／し',
                romaji: 'yon/shi',
                english: 'four',
                pronunciation: 'yohn/shee',
                example: '四つのリンゴがあります。',
                exampleRomaji: 'Yottsu no ringo ga arimasu.',
                exampleEnglish: 'There are four apples.',
                category: 'numbers',
                memoryAid: 'Yon - sounds like "yawn" - yawning at 4 AM'
            },
            {
                japanese: 'ご',
                romaji: 'go',
                english: 'five',
                pronunciation: 'goh',
                example: '五人で映画を見ました。',
                exampleRomaji: 'Gonin de eiga o mimashita.',
                exampleEnglish: 'We watched a movie with five people.',
                category: 'numbers',
                memoryAid: 'Go - "Go" - high five, then go!'
            },
            {
                japanese: 'ろく',
                romaji: 'roku',
                english: 'six',
                pronunciation: 'roh-koo',
                example: '六時に起きます。',
                exampleRomaji: 'Roku-ji ni okimasu.',
                exampleEnglish: 'I wake up at six o\'clock.',
                category: 'numbers',
                memoryAid: 'Roku - "Rock you" - rock music has 6 strings on a guitar'
            },
            {
                japanese: 'なな／しち',
                romaji: 'nana/shichi',
                english: 'seven',
                pronunciation: 'nah-nah/shee-chee',
                example: '七時に寝ます。',
                exampleRomaji: 'Shichi-ji ni nemasu.',
                exampleEnglish: 'I go to sleep at seven o\'clock.',
                category: 'numbers',
                memoryAid: 'Nana - think of "banana" which typically has 7 letters'
            },
            {
                japanese: 'はち',
                romaji: 'hachi',
                english: 'eight',
                pronunciation: 'hah-chee',
                example: '八人で食べました。',
                exampleRomaji: 'Hachinin de tabemashita.',
                exampleEnglish: 'Eight people ate together.',
                category: 'numbers',
                memoryAid: 'Hachi - sounds like "Hitachi" - a company with 8 letters'
            },
            {
                japanese: 'きゅう／く',
                romaji: 'kyuu/ku',
                english: 'nine',
                pronunciation: 'kyoo/koo',
                example: '九時に会いましょう。',
                exampleRomaji: 'Ku-ji ni aimashou.',
                exampleEnglish: 'Let\'s meet at nine o\'clock.',
                category: 'numbers',
                memoryAid: 'Kyuu - "Cute" - cloud 9 is a cute place to be'
            },
            {
                japanese: 'じゅう',
                romaji: 'juu',
                english: 'ten',
                pronunciation: 'joo',
                example: '十分待ちました。',
                exampleRomaji: 'Juppun machimashita.',
                exampleEnglish: 'I waited for ten minutes.',
                category: 'numbers',
                memoryAid: 'Juu - "Jew" - Jewish menorah has 10 points'
            },
            {
                japanese: 'じゅういち',
                romaji: 'juuichi',
                english: 'eleven',
                pronunciation: 'joo-ee-chee',
                example: '十一人います。',
                exampleRomaji: 'Juuichi-nin imasu.',
                exampleEnglish: 'There are eleven people.',
                category: 'numbers',
                memoryAid: 'Juu (10) + ichi (1) = 11'
            },
            {
                japanese: 'じゅうに',
                romaji: 'juuni',
                english: 'twelve',
                pronunciation: 'joo-nee',
                example: '十二時に昼ごはんを食べます。',
                exampleRomaji: 'Juuni-ji ni hiru-gohan o tabemasu.',
                exampleEnglish: 'I eat lunch at twelve o\'clock.',
                category: 'numbers',
                memoryAid: 'Juu (10) + ni (2) = 12'
            },
            {
                japanese: 'じゅうさん',
                romaji: 'juusan',
                english: 'thirteen',
                pronunciation: 'joo-sahn',
                example: '十三歳の妹がいます。',
                exampleRomaji: 'Juusan-sai no imouto ga imasu.',
                exampleEnglish: 'I have a thirteen-year-old sister.',
                category: 'numbers',
                memoryAid: 'Juu (10) + san (3) = 13'
            },
            {
                japanese: 'じゅうよん',
                romaji: 'juuyon',
                english: 'fourteen',
                pronunciation: 'joo-yohn',
                example: '十四日に日本に行きます。',
                exampleRomaji: 'Juuyokka ni Nihon ni ikimasu.',
                exampleEnglish: 'I will go to Japan on the fourteenth.',
                category: 'numbers',
                memoryAid: 'Juu (10) + yon (4) = 14'
            },
            {
                japanese: 'じゅうご',
                romaji: 'juugo',
                english: 'fifteen',
                pronunciation: 'joo-goh',
                example: '十五分かかります。',
                exampleRomaji: 'Juugo-fun kakarimasu.',
                exampleEnglish: 'It takes fifteen minutes.',
                category: 'numbers',
                memoryAid: 'Juu (10) + go (5) = 15'
            },
            {
                japanese: 'じゅうろく',
                romaji: 'juuroku',
                english: 'sixteen',
                pronunciation: 'joo-roh-koo',
                example: '十六歳の誕生日です。',
                exampleRomaji: 'Juuroku-sai no tanjoubi desu.',
                exampleEnglish: 'It\'s my sixteenth birthday.',
                category: 'numbers',
                memoryAid: 'Juu (10) + roku (6) = 16'
            },
            {
                japanese: 'じゅうなな',
                romaji: 'juunana',
                english: 'seventeen',
                pronunciation: 'joo-nah-nah',
                example: '十七枚の写真があります。',
                exampleRomaji: 'Juunana-mai no shashin ga arimasu.',
                exampleEnglish: 'There are seventeen photos.',
                category: 'numbers',
                memoryAid: 'Juu (10) + nana (7) = 17'
            },
            {
                japanese: 'じゅうはち',
                romaji: 'juuhachi',
                english: 'eighteen',
                pronunciation: 'joo-hah-chee',
                example: '十八才になりました。',
                exampleRomaji: 'Juuhachi-sai ni narimashita.',
                exampleEnglish: 'I turned eighteen.',
                category: 'numbers',
                memoryAid: 'Juu (10) + hachi (8) = 18'
            },
            {
                japanese: 'じゅうきゅう',
                romaji: 'juukyuu',
                english: 'nineteen',
                pronunciation: 'joo-kyoo',
                example: '十九個のりんごがあります。',
                exampleRomaji: 'Juukyuu-ko no ringo ga arimasu.',
                exampleEnglish: 'There are nineteen apples.',
                category: 'numbers',
                memoryAid: 'Juu (10) + kyuu (9) = 19'
            },
            {
                japanese: 'にじゅう',
                romaji: 'nijuu',
                english: 'twenty',
                pronunciation: 'nee-joo',
                example: '二十人が来ました。',
                exampleRomaji: 'Nijuu-nin ga kimashita.',
                exampleEnglish: 'Twenty people came.',
                category: 'numbers',
                memoryAid: 'Ni (2) + juu (10) = 20; "Knee-jewel" - 20 jewels on your knee'
            },
            {
                japanese: 'ひゃく',
                romaji: 'hyaku',
                english: 'hundred',
                pronunciation: 'hyah-koo',
                example: '百円です。',
                exampleRomaji: 'Hyaku-en desu.',
                exampleEnglish: 'It\'s one hundred yen.',
                category: 'numbers',
                memoryAid: 'Hyaku - "Hi, yak!" - greeting a hundred yaks'
            },
            {japanese: 'ひゃく',
                romaji: 'hyaku',
                english: 'hundred',
                pronunciation: 'hyah-koo',
                example: '百円です。',
                exampleRomaji: 'Hyaku-en desu.',
                exampleEnglish: 'It\'s one hundred yen.',
                category: 'numbers',
                memoryAid: 'Hyaku - "Hi, yak!" - greeting a hundred yaks'
            },
            {
                japanese: 'せん',
                romaji: 'sen',
                english: 'thousand',
                pronunciation: 'sehn',
                example: '千円札があります。',
                exampleRomaji: 'Sen-en satsu ga arimasu.',
                exampleEnglish: 'I have a thousand-yen bill.',
                category: 'numbers',
                memoryAid: 'Sen - sounds like "Send" - send me a thousand dollars'
            },
            {
                japanese: 'まん',
                romaji: 'man',
                english: 'ten thousand',
                pronunciation: 'mahn',
                example: '一万円払いました。',
                exampleRomaji: 'Ichiman-en haraimashita.',
                exampleEnglish: 'I paid ten thousand yen.',
                category: 'numbers',
                memoryAid: 'Man - "The man" has ten thousand dollars'
            },
            {
                japanese: 'ひゃくまん',
                romaji: 'hyakuman',
                english: 'million',
                pronunciation: 'hyah-koo-mahn',
                example: '人口は百万人以上です。',
                exampleRomaji: 'Jinkou wa hyakuman-nin ijou desu.',
                exampleEnglish: 'The population is over one million people.',
                category: 'numbers',
                memoryAid: 'Hyaku (100) + man (10,000) = 1,000,000'
            },
            
            // Food category
            {
                japanese: 'ごはん',
                romaji: 'gohan',
                english: 'rice/meal',
                pronunciation: 'go-hahn',
                example: '朝ごはんを食べました。',
                exampleRomaji: 'Asa gohan o tabemashita.',
                exampleEnglish: 'I ate breakfast.',
                category: 'food',
                memoryAid: 'In Japan, "gohan" is both rice and a meal - rice is that important!'
            },
            {
                japanese: 'パン',
                romaji: 'pan',
                english: 'bread',
                pronunciation: 'pahn',
                example: 'パンを買いました。',
                exampleRomaji: 'Pan o kaimashita.',
                exampleEnglish: 'I bought bread.',
                category: 'food',
                memoryAid: 'Sounds like "pan" in Spanish, which also means bread'
            },
            {
                japanese: 'たまご',
                romaji: 'tamago',
                english: 'egg',
                pronunciation: 'tah-mah-go',
                example: 'たまごを二つ使います。',
                exampleRomaji: 'Tamago o futatsu tsukaimasu.',
                exampleEnglish: 'I use two eggs.',
                category: 'food',
                memoryAid: 'Think "Tom and Go" bought eggs for breakfast'
            },
            {
                japanese: 'にく',
                romaji: 'niku',
                english: 'meat',
                pronunciation: 'nee-koo',
                example: 'にくを焼きます。',
                exampleRomaji: 'Niku o yakimasu.',
                exampleEnglish: 'I will grill the meat.',
                category: 'food',
                memoryAid: '"Need-cool" meat needs to be kept cool in the refrigerator'
            },
            {
                japanese: 'さかな',
                romaji: 'sakana',
                english: 'fish',
                pronunciation: 'sah-kah-nah',
                example: 'さかなを食べます。',
                exampleRomaji: 'Sakana o tabemasu.',
                exampleEnglish: 'I eat fish.',
                category: 'food',
                memoryAid: 'Sounds like "sack of nah" - a sack of fish you don\'t want to refuse'
            },
            
            // Drinks category
            {
                japanese: 'みず',
                romaji: 'mizu',
                english: 'water',
                pronunciation: 'mee-zu',
                example: 'みずを飲みます。',
                exampleRomaji: 'Mizu o nomimasu.',
                exampleEnglish: 'I drink water.',
                category: 'drinks',
                memoryAid: 'Me-zoo: "Me" at the "zoo" needs water on a hot day'
            },
            {
                japanese: 'おちゃ',
                romaji: 'ocha',
                english: 'tea',
                pronunciation: 'oh-cha',
                example: 'おちゃをのみませんか？',
                exampleRomaji: 'Ocha o nomimasen ka?',
                exampleEnglish: 'Would you like to drink tea?',
                category: 'drinks',
                memoryAid: 'Think "oh-cha-cha" - doing a tea dance'
            },
            {
                japanese: 'コーヒー',
                romaji: 'koohii',
                english: 'coffee',
                pronunciation: 'koh-hee',
                example: 'コーヒーが好きです。',
                exampleRomaji: 'Koohii ga suki desu.',
                exampleEnglish: 'I like coffee.',
                category: 'drinks',
                memoryAid: 'Sounds similar to "coffee" in English'
            },
            
            // Fruits category
            {
                japanese: 'りんご',
                romaji: 'ringo',
                english: 'apple',
                pronunciation: 'ring-go',
                example: 'りんごを食べます。',
                exampleRomaji: 'Ringo o tabemasu.',
                exampleEnglish: 'I eat an apple.',
                category: 'fruits',
                memoryAid: 'The "ring" goes around the apple'
            },
            {
                japanese: 'バナナ',
                romaji: 'banana',
                english: 'banana',
                pronunciation: 'bah-nah-nah',
                example: 'バナナを買いました。',
                exampleRomaji: 'Banana o kaimashita.',
                exampleEnglish: 'I bought bananas.',
                category: 'fruits',
                memoryAid: 'Same as English "banana"'
            },
            {
                japanese: 'みかん',
                romaji: 'mikan',
                english: 'mandarin orange',
                pronunciation: 'mee-kahn',
                example: 'みかんを三つ食べました。',
                exampleRomaji: 'Mikan o mittsu tabemashita.',
                exampleEnglish: 'I ate three mandarin oranges.',
                category: 'fruits',
                memoryAid: '"Me can" eat many mandarin oranges'
            },
            
            // Colors
            {
                japanese: 'あか',
                romaji: 'aka',
                english: 'red',
                pronunciation: 'ah-kah',
                example: 'このりんごはあかです。',
                exampleRomaji: 'Kono ringo wa aka desu.',
                exampleEnglish: 'This apple is red.',
                category: 'colors',
                memoryAid: 'Ah-ka - "Ah, car!" - you spot a red car'
            },
            {
                japanese: 'あお',
                romaji: 'ao',
                english: 'blue',
                pronunciation: 'ah-oh',
                example: '空はあおです。',
                exampleRomaji: 'Sora wa ao desu.',
                exampleEnglish: 'The sky is blue.',
                category: 'colors',
                memoryAid: 'Ah-o - "Ah, ocean!" - the ocean is blue'
            },
            {
                japanese: 'きいろ',
                romaji: 'kiiro',
                english: 'yellow',
                pronunciation: 'kee-ee-roh',
                example: 'バナナはきいろです。',
                exampleRomaji: 'Banana wa kiiro desu.',
                exampleEnglish: 'Bananas are yellow.',
                category: 'colors',
                memoryAid: 'Ki-iro - "Key hero" - your key is a hero with a yellow cape'
            },
            
            // Greetings
            {
                japanese: 'こんにちは',
                romaji: 'konnichiwa',
                english: 'hello/good afternoon',
                pronunciation: 'kon-nee-chee-wah',
                example: 'こんにちは、元気ですか？',
                exampleRomaji: 'Konnichiwa, genki desu ka?',
                exampleEnglish: 'Hello, how are you?',
                category: 'greetings',
                memoryAid: 'Kon-nichi-wa - "Connect each of us" - greeting connects people'
            },
            {
                japanese: 'さようなら',
                romaji: 'sayounara',
                english: 'goodbye',
                pronunciation: 'sah-yoh-nah-rah',
                example: 'さようなら、また明日。',
                exampleRomaji: 'Sayounara, mata ashita.',
                exampleEnglish: 'Goodbye, see you tomorrow.',
                category: 'greetings',
                memoryAid: 'Sa-yo-na-ra - "Sign your name now" - signing off when you leave'
            },
            {
                japanese: 'おはよう',
                romaji: 'ohayou',
                english: 'good morning',
                pronunciation: 'oh-hah-yoh',
                example: 'おはようございます。',
                exampleRomaji: 'Ohayou gozaimasu.',
                exampleEnglish: 'Good morning (polite).',
                category: 'greetings',
                memoryAid: 'O-ha-yo - "Oh, hi yo!" - greeting someone in the morning'
            }
        ];
        
        const categories = {
            'all': 'All Words',
            'numbers': 'Numbers',
            'food': 'Food',
            'drinks': 'Drinks',
            'fruits': 'Fruits',
            'colors': 'Colors',
            'greetings': 'Greetings'
        };
        
        let currentCards = [...allCards];
        let currentCardIndex = 0;
        let selectedCategory = 'all';
        let isShuffled = false;
        
        // DOM Elements
        const categoriesContainer = document.getElementById('categories');
        const cardCounter = document.getElementById('cardCounter');
        const flashcard = document.getElementById('flashcard');
        const japaneseEl = document.getElementById('japanese');
        const romajiEl = document.getElementById('romaji');
        const pronunciationEl = document.getElementById('pronunciation');
        const memoryAidEl = document.getElementById('memoryAid');
        const englishEl = document.getElementById('english');
        const exampleEl = document.getElementById('example');
        const exampleRomajiEl = document.getElementById('exampleRomaji');
        const exampleEnglishEl = document.getElementById('exampleEnglish');
        const prevBtn = document.getElementById('prevBtn');
        const nextBtn = document.getElementById('nextBtn');
        const showRomajiCheckbox = document.getElementById('showRomaji');
        const showPronunciationCheckbox = document.getElementById('showPronunciation');
        const shuffleCardsCheckbox = document.getElementById('shuffleCards');
        const categoryLabelEl = document.getElementById('categoryLabel');
        
        // Initialize categories
        for (const [key, value] of Object.entries(categories)) {
            const button = document.createElement('button');
            button.textContent = value;
            button.className = `category-btn ${key === selectedCategory ? 'active' : ''}`;
            button.setAttribute('data-category', key);
            button.addEventListener('click', () => {
                document.querySelectorAll('.category-btn').forEach(btn => btn.classList.remove('active'));
                button.classList.add('active');
                selectedCategory = key;
                filterCards();
            });
            categoriesContainer.appendChild(button);
        }
        
        // Event Listeners
        flashcard.addEventListener('click', () => {
            flashcard.classList.toggle('flipped');
        });
        
        prevBtn.addEventListener('click', () => {
            currentCardIndex = currentCardIndex > 0 ? currentCardIndex - 1 : currentCards.length - 1;
            updateCard();
            flashcard.classList.remove('flipped');
        });
        
        nextBtn.addEventListener('click', () => {
            currentCardIndex = currentCardIndex < currentCards.length - 1 ? currentCardIndex + 1 : 0;
            updateCard();
            flashcard.classList.remove('flipped');
        });
        
        showRomajiCheckbox.addEventListener('change', () => {
            romajiEl.style.display = showRomajiCheckbox.checked ? 'block' : 'none';
        });
        
        showPronunciationCheckbox.addEventListener('change', () => {
            pronunciationEl.style.display = showPronunciationCheckbox.checked ? 'block' : 'none';
        });
        
        shuffleCardsCheckbox.addEventListener('change', () => {
            isShuffled = shuffleCardsCheckbox.checked;
            filterCards();
        });
        
        // Functions
        function shuffleArray(array) {
            const newArray = [...array];
            for (let i = newArray.length - 1; i > 0; i--) {
                const j = Math.floor(Math.random() * (i + 1));
                [newArray[i], newArray[j]] = [newArray[j], newArray[i]];
            }
            return newArray;
        }
        
        function filterCards() {
            if (selectedCategory === 'all') {
                currentCards = isShuffled ? shuffleArray([...allCards]) : [...allCards];
            } else {
                const filteredCards = allCards.filter(card => card.category === selectedCategory);
                currentCards = isShuffled ? shuffleArray([...filteredCards]) : [...filteredCards];
            }
            
            currentCardIndex = 0;
            updateCard();
            flashcard.classList.remove('flipped');
        }
        
        function updateCard() {
            const card = currentCards[currentCardIndex];
            
            japaneseEl.textContent = card.japanese;
            romajiEl.textContent = card.romaji;
            pronunciationEl.textContent = `"${card.pronunciation}"`;
            memoryAidEl.textContent = card.memoryAid;
            englishEl.textContent = card.english;
            exampleEl.textContent = card.example;
            exampleRomajiEl.textContent = card.exampleRomaji;
            exampleEnglishEl.textContent = card.exampleEnglish;
            categoryLabelEl.textContent = categories[card.category];
            
            cardCounter.textContent = `Card ${currentCardIndex + 1} of ${currentCards.length}`;
        }
        
        // Initialize
        updateCard();
    </script>
</body>
</html>
